openapi: 3.0.0
info:
  title: Smart Home API
  description: API для управления умным домом
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
    description: Локальный сервер
tags:
  - name: Пользователи
  - name: Устройства
  - name: Телеметрия 
paths:
  /users:
    get:
      summary: Получить список пользователей
      operationId: getUsers
      tags:
        - Пользователи
      parameters:
        - name: login
          in: query
          required: true
          schema:
            type: string
            example: example_login
          description: Логин пользователя
        - name: status
          in: query
          required: false
          schema:
            type: string
            example: active
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    login:
                      type: string
                    update_date:
                      type: string
                      format: date-time
                    status:
                      type: string

    post:
      summary: Создать нового пользователя
      operationId: createUser
      tags:
        - Пользователи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
      responses:
        '201':
          description: Пользователь успешно создан

  /users/{id}:
    get:
      summary: Запрос пользователя по ID
      operationId: getUser
      tags:
        - Пользователи
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    login:
                      type: string
                    update_date:
                      type: string
                      format: date-time
                    status:
                      type: string

    put:
      summary: Обновить пользователя по ID
      operationId: updateUser
      tags:
        - Пользователи
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    login:
                      type: string
                    update_date:
                      type: string
                      format: date-time
                    status:
                      type: string
      responses:
        '201':
          description: Пользователь успешно обновлен

    delete:
      summary: Удалить пользователя по ID
      operationId: deleteUser
      tags:
        - Пользователи
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Пользователь успешно удален
  /users/{id}/houses:
    get:
      summary: Получить список домов
      tags:
        - Пользователи
      operationId: getHouses
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Найдены дома
          content:
            application/json:
              schema:
                properties:
                  id: 
                    type: string
                    format: uuid
                  userId:
                    type: string
                    format: uuid
                  address:
                    type: string
                  update_date:
                    type: string
                    format: data-time
                  status:
                    type: string
    post:
      summary: Создать дом
      tags:
        - Пользователи
      operationId: createHouse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
               properties:
                 address:
                   type: string
      responses:
        '201':
          description: Дом успешно создан
  /users/{userId}/houses/{houseId}:
    get: 
      summary: Получить информацию о доме по id
      tags:
        - Пользователи
      operationId: getHouse
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: houseId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Информация о доме получена
          content:
            application/json:
              schema:
                properties:
                 address:
                   type: string
    put:
      summary: Обновить информацию о доме
      tags:
        - Пользователи
      operationId: updateHouse
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: houseId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                 address:
                   type: string
      responses:
        '201':
          description: Данные дома пользователя обновлены
    delete:
      summary: Удалить информацию о доме пользователя
      tags:
        - Пользователи
      operationId: deleteHouse
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: houseId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Данные дома пользователя удалены
  /devices:
    get:
      summary: Получить список устройств
      tags:
        - Устройства
      operationId: getDevices
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: house_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Список устройств получен
          content:
            application/json:
              schema: 
                properties:
                  id:
                    type: string
                    format: uuid
                  name: 
                    type: string
                  serialNumber:
                    type: string
                  userId:
                    type: string
                    format: string
                  houseId: 
                    type: string
                    format: uuid
                  status:
                    type: string
                  currentTemperature:
                    type: integer
                  isOpen:
                    type: boolean
                  update_date:
                    type: string
                    format: date-time
                  deviceType:
                    type: string
    post:
      summary: Создать устройство
      tags:
        - Устройства
      operationId: createDevice
      requestBody:
        content:
          application/json:
            schema:
              properties:
                currentTemperature:
                  type: integer
                isOpen:
                  type: boolean
                deviceType:
                  type: string
                name: 
                  type: string
                serialNumber:
                  type: string
      responses:
        '201':
          description: Устройство создано
  /devices/{id}:
    get:
      summary: Получить информацию об устройстве
      tags:
        - Устройства
      operationId: getDevice
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: string
            format: uuid
      responses:
        '200':
          description: Данные об устройстве получены
          content:
            application/json:
              schema: 
                properties:
                  id:
                    type: string
                    format: uuid
                  name: 
                    type: string
                  serialNumber:
                    type: string
                  userId:
                    type: string
                    format: string
                  houseId: 
                    type: string
                    format: uuid
                  status:
                    type: string
                  currentTemperature:
                    type: integer
                  isOpen:
                    type: boolean
                  update_date:
                    type: string
                    format: date-time
                  deviceType:
                    type: string
    put:
      summary: Обновить данные устройства
      tags:
        - Устройства
      operationId: updateDevice
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              properties:
                currentTemperature:
                  type: integer
                isOpen:
                  type: boolean
                deviceType:
                  type: string
                name: 
                  type: string
                serialNumber:
                  type: string
      responses:
        '201':
          description: Данные устройства обновлены
    delete:
      summary: Удалить устройство
      tags:
        - Устройства
      operationId: deleteDevice
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: string
            format: uuid
      responses:
        '201':
          description: Устройство удалено
  /devices/{id}/telemetry:
    get:
      summary: Получить данные телеметрии по устройству
      tags:
        - Телеметрия 
      operationId: getDeviceTelemetry
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: string
            format: uuid
      responses:
        '200':
          description: Данные телеметрии устройства получены
          content:
            application/json:
              schema: 
                properties:
                  id:
                    type: string
                    format: uuid
                  deviceId: 
                    type: string
                    format: uuid
                  houseId:
                    type: string
                    format: uuid
                  currentTemperature:
                    type: integer
                  isOpen:
                    type: boolean